#pragma version =0.4.1;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

global (int, slice, int, slice) __tact_context;
global cell __tact_context_sys;

(int, slice, int, slice) __tact_context_get() inline { return __tact_context; }

() __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() != 267);
}

(slice, slice) __tact_load_address(slice cs) inline {
    slice raw = cs~load_msg_addr();
    __tact_verify_address(raw);
    return (cs, raw);
}

builder __tact_store_address(builder b, slice address) inline {
    __tact_verify_address(address);
    b = b.store_slice(address);
    return b;
}

int __tact_address_eq(slice a, slice b) inline {
    return equal_slice_bits(a, b);
}

(slice, ((slice))) __gen_read_ChangeOwner(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 256331011);
    var v'newOwner = sc_0~__tact_load_address();
    return (sc_0, (v'newOwner));
}

builder __gen_write_PoolSettings(builder build_0, (int, int, int, int, int, int) v) inline_ref {
    var (v'liquidationRatio, v'stabilityFeeRate, v'lastAccumulationTime, v'closeFactorBps, v'liquidatorIncentiveBps, v'treasutyFeeBps) = v;
    build_0 = build_0.store_uint(v'liquidationRatio, 32);
    build_0 = build_0.store_uint(v'stabilityFeeRate, 32);
    build_0 = build_0.store_uint(v'lastAccumulationTime, 32);
    build_0 = build_0.store_uint(v'closeFactorBps, 32);
    build_0 = build_0.store_uint(v'liquidatorIncentiveBps, 32);
    build_0 = build_0.store_uint(v'treasutyFeeBps, 32);
    return build_0;
}

(slice, ((int, int, int, int, int, int))) __gen_read_PoolSettings(slice sc_0) inline_ref {
    var v'liquidationRatio = sc_0~load_uint(32);
    var v'stabilityFeeRate = sc_0~load_uint(32);
    var v'lastAccumulationTime = sc_0~load_uint(32);
    var v'closeFactorBps = sc_0~load_uint(32);
    var v'liquidatorIncentiveBps = sc_0~load_uint(32);
    var v'treasutyFeeBps = sc_0~load_uint(32);
    return (sc_0, (v'liquidationRatio, v'stabilityFeeRate, v'lastAccumulationTime, v'closeFactorBps, v'liquidatorIncentiveBps, v'treasutyFeeBps));
}

builder __gen_write_GateKeeperContract(builder build_0, (slice, (int, int, int, int, int, int)) v) inline {
    var (v'owner, (v'poolSettings'liquidationRatio, v'poolSettings'stabilityFeeRate, v'poolSettings'lastAccumulationTime, v'poolSettings'closeFactorBps, v'poolSettings'liquidatorIncentiveBps, v'poolSettings'treasutyFeeBps)) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = __gen_write_PoolSettings(build_0, (v'poolSettings'liquidationRatio, v'poolSettings'stabilityFeeRate, v'poolSettings'lastAccumulationTime, v'poolSettings'closeFactorBps, v'poolSettings'liquidatorIncentiveBps, v'poolSettings'treasutyFeeBps));
    return build_0;
}

(slice, ((slice, (int, int, int, int, int, int)))) __gen_read_GateKeeperContract(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'poolSettings = sc_0~__gen_read_PoolSettings();
    return (sc_0, (v'owner, v'poolSettings));
}

_ __gen_Context_get_sender((int, slice, int, slice) v) inline {
    var (v'bounced, v'sender, v'value, v'raw) = v;
    return v'sender;
}

(int, int, int, int, int, int) __gen_PoolSettings_to_external(((int, int, int, int, int, int)) v) inline {
    var (v'liquidationRatio, v'stabilityFeeRate, v'lastAccumulationTime, v'closeFactorBps, v'liquidatorIncentiveBps, v'treasutyFeeBps) = v; 
    return (v'liquidationRatio, v'stabilityFeeRate, v'lastAccumulationTime, v'closeFactorBps, v'liquidatorIncentiveBps, v'treasutyFeeBps);
}

(slice, ((slice))) __gen_read_$init$GateKeeperContract(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    return (sc_0, (v'owner));
}

(slice, (int, int, int, int, int, int)) $__gen_GateKeeperContract_init(slice $owner) impure inline_ref {
    var (($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps))) = (null(), null());
    $self'owner = $owner;
    return ($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps));
}

(slice, (int, int, int, int, int, int)) __gen_load_GateKeeperContract() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_GateKeeperContract();
    } else {
        (slice owner) = $sc~__gen_read_$init$GateKeeperContract();
        $sc.end_parse();
        return $__gen_GateKeeperContract_init(owner);
    }
}

() __gen_store_GateKeeperContract((slice, (int, int, int, int, int, int)) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_GateKeeperContract(b, v);
    set_data(b.end_cell());
}

(int, int, int, int, int, int) $__gen_GateKeeperContract_poolSettings((slice, (int, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps))) = $self;
    return ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps);
}

_ $__gen_get_poolSettings() method_id(88360) {
    var self = __gen_load_GateKeeperContract();
    var res = $__gen_GateKeeperContract_poolSettings(self);
    return __gen_PoolSettings_to_external(res);
}

((slice, (int, int, int, int, int, int)), ()) $__gen_GateKeeperContract_requireOwner((slice, (int, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps))) = $self;
    throw_unless(132, __tact_address_eq(__gen_Context_get_sender(__tact_context_get()), $self'owner));
    return (($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps)), ());
}

slice $__gen_GateKeeperContract_owner((slice, (int, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps))) = $self;
    return $self'owner;
}

_ $__gen_get_owner() method_id(83229) {
    var self = __gen_load_GateKeeperContract();
    var res = $__gen_GateKeeperContract_owner(self);
    return res;
}

(((slice, (int, int, int, int, int, int))), ()) $__gen_GateKeeperContract_receive_ChangeOwner((slice, (int, int, int, int, int, int)) $self, (slice) $msg) impure inline {
    var ($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps)) = $self;
    var ($msg'newOwner) = $msg;
    ($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps))~$__gen_GateKeeperContract_requireOwner();
    $self'owner = $msg'newOwner;
    return (($self'owner, ($self'poolSettings'liquidationRatio, $self'poolSettings'stabilityFeeRate, $self'poolSettings'lastAccumulationTime, $self'poolSettings'closeFactorBps, $self'poolSettings'liquidatorIncentiveBps, $self'poolSettings'treasutyFeeBps)), ());
}

((slice, (int, int, int, int, int, int)), int) __gen_router_GateKeeperContract((slice, (int, int, int, int, int, int)) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive ChangeOwner message
    if (op == 256331011) {
        var msg = in_msg~__gen_read_ChangeOwner();
        self~$__gen_GateKeeperContract_receive_ChangeOwner(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    
    ;; Load contract data
    var self = __gen_load_GateKeeperContract();
    
    ;; Handle operation
    int handled = self~__gen_router_GateKeeperContract(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_GateKeeperContract(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.ownable.transferable"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmWmK97kNPvAbk9PMSVoNv4reNnwqDKaSC4HE5QwTpjkJp";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
