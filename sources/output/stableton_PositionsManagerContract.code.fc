#pragma version =0.4.2;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

slice __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() == 267);
    var h = address.preload_uint(11);
    throw_unless(136, (h == 1024) | (h == 1279));
    throw_unless(137, h == 1024);
    return address;
}

(slice, slice) __tact_load_address(slice cs) inline {
    slice raw = cs~load_msg_addr();
    return (cs, __tact_verify_address(raw));
}

builder __tact_store_address(builder b, slice address) inline {
    return b.store_slice(__tact_verify_address(address));
}

slice __tact_create_address(int chain, int hash) inline {
    var b = begin_cell();
    b = b.store_uint(2, 2);
    b = b.store_uint(0, 1);
    b = b.store_int(chain, 8);
    b = b.store_uint(hash, 256);
    var addr = b.end_cell().begin_parse();
    return __tact_verify_address(addr);
}

slice __tact_compute_contract_address(int chain, cell code, cell data) inline {
    var b = begin_cell();
    b = b.store_uint(0, 2);
    b = b.store_uint(3, 2);
    b = b.store_uint(0, 1);
    b = b.store_ref(code);
    b = b.store_ref(data);
    var hash = cell_hash(b.end_cell());
    return __tact_create_address(chain, hash);
}

forall X -> X __tact_not_null(X x) inline { throw_if(128, null?(x)); return x; }

global (int, slice, int, slice) __tact_context;
global slice __tact_context_sender;
global cell __tact_context_sys;

(int, slice, int, slice) __tact_context_get() inline { return __tact_context; }

slice __tact_context_get_sender() inline { return __tact_context_sender; }

builder __tact_store_bool(builder b, int v) inline {
    b = b.store_int(v, 1);
    return b;
}

int __tact_address_eq(slice a, slice b) inline {
    return equal_slice_bits(a, b);
}

cell __tact_dict_set_code(cell dict, int id, cell code) inline {
    return udict_set_ref(dict, 16, id, code);
}

cell __tact_dict_get_code(cell dict, int id) inline {
    var (data, ok) = udict_get_ref?(dict, 16, id);
    throw_unless(135, ok);
    return data;
}

(slice, ((int))) __gen_read_Deploy(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

builder __gen_write_DeployOk(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell __gen_writecell_DeployOk((int) v) inline {
    return __gen_write_DeployOk(begin_cell(), v).end_cell();
}

builder __gen_write_PoolSettings(builder build_0, (int, int, int, int) v) inline {
    var (v'liquidationRatio, v'stabilityFeeRate, v'closeFactorBps, v'liquidatorIncentiveBps) = v;
    build_0 = build_0.store_uint(v'liquidationRatio, 32);
    build_0 = build_0.store_uint(v'stabilityFeeRate, 32);
    build_0 = build_0.store_uint(v'closeFactorBps, 32);
    build_0 = build_0.store_uint(v'liquidatorIncentiveBps, 32);
    return build_0;
}

(slice, ((int, int, int, int))) __gen_read_PoolSettings(slice sc_0) inline {
    var v'liquidationRatio = sc_0~load_uint(32);
    var v'stabilityFeeRate = sc_0~load_uint(32);
    var v'closeFactorBps = sc_0~load_uint(32);
    var v'liquidatorIncentiveBps = sc_0~load_uint(32);
    return (sc_0, (v'liquidationRatio, v'stabilityFeeRate, v'closeFactorBps, v'liquidatorIncentiveBps));
}

builder __gen_write_DebtRate(builder build_0, (int, int) v) inline {
    var (v'debtAccumulatedRate, v'lastAccumulationTime) = v;
    build_0 = build_0.store_uint(v'debtAccumulatedRate, 32);
    build_0 = build_0.store_uint(v'lastAccumulationTime, 32);
    return build_0;
}

(slice, ((int, int))) __gen_read_DebtRate(slice sc_0) inline {
    var v'debtAccumulatedRate = sc_0~load_uint(32);
    var v'lastAccumulationTime = sc_0~load_uint(32);
    return (sc_0, (v'debtAccumulatedRate, v'lastAccumulationTime));
}

builder __gen_write_DepositCollateralMessage(builder build_0, (slice, int, (int, int, int, int), (int, int), int) v) inline {
    var (v'user, v'amount, (v'settings'liquidationRatio, v'settings'stabilityFeeRate, v'settings'closeFactorBps, v'settings'liquidatorIncentiveBps), (v'rate'debtAccumulatedRate, v'rate'lastAccumulationTime), v'tonPriceWithSafetyMargin) = v;
    build_0 = store_uint(build_0, 3723304936, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_coins(v'amount);
    build_0 = __gen_write_PoolSettings(build_0, (v'settings'liquidationRatio, v'settings'stabilityFeeRate, v'settings'closeFactorBps, v'settings'liquidatorIncentiveBps));
    build_0 = __gen_write_DebtRate(build_0, (v'rate'debtAccumulatedRate, v'rate'lastAccumulationTime));
    build_0 = build_0.store_coins(v'tonPriceWithSafetyMargin);
    return build_0;
}

cell __gen_writecell_DepositCollateralMessage((slice, int, (int, int, int, int), (int, int), int) v) inline {
    return __gen_write_DepositCollateralMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int, (int, int, int, int), (int, int), int))) __gen_read_DepositCollateralMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3723304936);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_coins();
    var v'settings = sc_0~__gen_read_PoolSettings();
    var v'rate = sc_0~__gen_read_DebtRate();
    var v'tonPriceWithSafetyMargin = sc_0~load_coins();
    return (sc_0, (v'user, v'amount, v'settings, v'rate, v'tonPriceWithSafetyMargin));
}

builder __gen_write_WithdrawCollateralMessage(builder build_0, (slice, int, (int, int, int, int), (int, int), int) v) inline {
    var (v'user, v'amount, (v'settings'liquidationRatio, v'settings'stabilityFeeRate, v'settings'closeFactorBps, v'settings'liquidatorIncentiveBps), (v'rate'debtAccumulatedRate, v'rate'lastAccumulationTime), v'tonPriceWithSafetyMargin) = v;
    build_0 = store_uint(build_0, 3410368520, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_coins(v'amount);
    build_0 = __gen_write_PoolSettings(build_0, (v'settings'liquidationRatio, v'settings'stabilityFeeRate, v'settings'closeFactorBps, v'settings'liquidatorIncentiveBps));
    build_0 = __gen_write_DebtRate(build_0, (v'rate'debtAccumulatedRate, v'rate'lastAccumulationTime));
    build_0 = build_0.store_coins(v'tonPriceWithSafetyMargin);
    return build_0;
}

cell __gen_writecell_WithdrawCollateralMessage((slice, int, (int, int, int, int), (int, int), int) v) inline {
    return __gen_write_WithdrawCollateralMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int, (int, int, int, int), (int, int), int))) __gen_read_WithdrawCollateralMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3410368520);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_coins();
    var v'settings = sc_0~__gen_read_PoolSettings();
    var v'rate = sc_0~__gen_read_DebtRate();
    var v'tonPriceWithSafetyMargin = sc_0~load_coins();
    return (sc_0, (v'user, v'amount, v'settings, v'rate, v'tonPriceWithSafetyMargin));
}

builder __gen_write_WithdrawStablecoinMessage(builder build_0, (slice, int, (int, int, int, int), (int, int), int) v) inline {
    var (v'user, v'amount, (v'settings'liquidationRatio, v'settings'stabilityFeeRate, v'settings'closeFactorBps, v'settings'liquidatorIncentiveBps), (v'rate'debtAccumulatedRate, v'rate'lastAccumulationTime), v'tonPriceWithSafetyMargin) = v;
    build_0 = store_uint(build_0, 1815710139, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    build_0 = __gen_write_PoolSettings(build_0, (v'settings'liquidationRatio, v'settings'stabilityFeeRate, v'settings'closeFactorBps, v'settings'liquidatorIncentiveBps));
    build_0 = __gen_write_DebtRate(build_0, (v'rate'debtAccumulatedRate, v'rate'lastAccumulationTime));
    build_0 = build_0.store_coins(v'tonPriceWithSafetyMargin);
    return build_0;
}

cell __gen_writecell_WithdrawStablecoinMessage((slice, int, (int, int, int, int), (int, int), int) v) inline {
    return __gen_write_WithdrawStablecoinMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int, (int, int, int, int), (int, int), int))) __gen_read_WithdrawStablecoinMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1815710139);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    var v'settings = sc_0~__gen_read_PoolSettings();
    var v'rate = sc_0~__gen_read_DebtRate();
    var v'tonPriceWithSafetyMargin = sc_0~load_coins();
    return (sc_0, (v'user, v'amount, v'settings, v'rate, v'tonPriceWithSafetyMargin));
}

builder __gen_write_RepayStablecoinMessage(builder build_0, (slice, int, (int, int, int, int), (int, int), int) v) inline {
    var (v'user, v'amount, (v'settings'liquidationRatio, v'settings'stabilityFeeRate, v'settings'closeFactorBps, v'settings'liquidatorIncentiveBps), (v'rate'debtAccumulatedRate, v'rate'lastAccumulationTime), v'tonPriceWithSafetyMargin) = v;
    build_0 = store_uint(build_0, 3203603975, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    build_0 = __gen_write_PoolSettings(build_0, (v'settings'liquidationRatio, v'settings'stabilityFeeRate, v'settings'closeFactorBps, v'settings'liquidatorIncentiveBps));
    build_0 = __gen_write_DebtRate(build_0, (v'rate'debtAccumulatedRate, v'rate'lastAccumulationTime));
    build_0 = build_0.store_coins(v'tonPriceWithSafetyMargin);
    return build_0;
}

cell __gen_writecell_RepayStablecoinMessage((slice, int, (int, int, int, int), (int, int), int) v) inline {
    return __gen_write_RepayStablecoinMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int, (int, int, int, int), (int, int), int))) __gen_read_RepayStablecoinMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3203603975);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    var v'settings = sc_0~__gen_read_PoolSettings();
    var v'rate = sc_0~__gen_read_DebtRate();
    var v'tonPriceWithSafetyMargin = sc_0~load_coins();
    return (sc_0, (v'user, v'amount, v'settings, v'rate, v'tonPriceWithSafetyMargin));
}

builder __gen_write_DoWithdrawCollateralMessage(builder build_0, (slice, int) v) inline {
    var (v'user, v'amount) = v;
    build_0 = store_uint(build_0, 3285005247, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    return build_0;
}

cell __gen_writecell_DoWithdrawCollateralMessage((slice, int) v) inline {
    return __gen_write_DoWithdrawCollateralMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int))) __gen_read_DoWithdrawCollateralMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3285005247);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    return (sc_0, (v'user, v'amount));
}

builder __gen_write_IncreaseTotalStableMessage(builder build_0, (slice, int) v) inline {
    var (v'user, v'amount) = v;
    build_0 = store_uint(build_0, 2517198105, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    return build_0;
}

cell __gen_writecell_IncreaseTotalStableMessage((slice, int) v) inline {
    return __gen_write_IncreaseTotalStableMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int))) __gen_read_IncreaseTotalStableMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2517198105);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    return (sc_0, (v'user, v'amount));
}

builder __gen_write_DecreaseTotalStableMessage(builder build_0, (slice, int) v) inline {
    var (v'user, v'amount) = v;
    build_0 = store_uint(build_0, 281913388, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    return build_0;
}

cell __gen_writecell_DecreaseTotalStableMessage((slice, int) v) inline {
    return __gen_write_DecreaseTotalStableMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int))) __gen_read_DecreaseTotalStableMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 281913388);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    return (sc_0, (v'user, v'amount));
}

(slice, ((slice))) __gen_read_NewPositionIdMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 225756565);
    var v'user = sc_0~__tact_load_address();
    return (sc_0, (v'user));
}

builder __gen_write_SetPositionAddressMessage(builder build_0, (slice, slice) v) inline {
    var (v'user, v'position) = v;
    build_0 = store_uint(build_0, 1571217046, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = __tact_store_address(build_0, v'position);
    return build_0;
}

cell __gen_writecell_SetPositionAddressMessage((slice, slice) v) inline {
    return __gen_write_SetPositionAddressMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, slice))) __gen_read_SetDeps(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 587665798);
    var v'stablecoinMasterAddress = sc_0~__tact_load_address();
    var v'gateKeeperAddress = sc_0~__tact_load_address();
    return (sc_0, (v'stablecoinMasterAddress, v'gateKeeperAddress));
}

builder __gen_write_PositionsManagerContract(builder build_0, (slice, slice, slice, int) v) inline {
    var (v'stablecoinMasterAddress, v'gateKeeperAddress, v'owner, v'lastPositionId) = v;
    build_0 = __tact_store_address(build_0, v'stablecoinMasterAddress);
    build_0 = __tact_store_address(build_0, v'gateKeeperAddress);
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_uint(v'lastPositionId, 32);
    return build_0;
}

(slice, ((slice, slice, slice, int))) __gen_read_PositionsManagerContract(slice sc_0) inline {
    var v'stablecoinMasterAddress = sc_0~__tact_load_address();
    var v'gateKeeperAddress = sc_0~__tact_load_address();
    var v'owner = sc_0~__tact_load_address();
    var v'lastPositionId = sc_0~load_uint(32);
    return (sc_0, (v'stablecoinMasterAddress, v'gateKeeperAddress, v'owner, v'lastPositionId));
}

builder __gen_write_$init$UserPositionContract(builder build_0, (slice, slice, slice) v) inline {
    var (v'user, v'stablecoinMasterAddress, v'positionsManagerAddress) = v;
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = __tact_store_address(build_0, v'stablecoinMasterAddress);
    build_0 = __tact_store_address(build_0, v'positionsManagerAddress);
    return build_0;
}

builder __gen_write_$init$PositionAddressContract(builder build_0, (int) v) inline {
    var (v'id) = v;
    build_0 = build_0.store_int(v'id, 257);
    return build_0;
}

(slice, slice, slice, int) $__gen_PositionsManagerContract_init() impure inline_ref {
    var (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)) = (null(), null(), null(), 0);
    $self'owner = __tact_context_get_sender();
    $self'gateKeeperAddress = __tact_create_address(0, 0);
    $self'stablecoinMasterAddress = __tact_create_address(0, 0);
    return ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId);
}

(slice, slice, slice, int) __gen_load_PositionsManagerContract() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_PositionsManagerContract();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        return $__gen_PositionsManagerContract_init();
    }
}

() __gen_store_PositionsManagerContract((slice, slice, slice, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_PositionsManagerContract(b, v);
    set_data(b.end_cell());
}

slice $contractAddress((cell, cell) $s) impure inline_ref {
    var (($s'code, $s'data)) = $s;
    return __tact_compute_contract_address(0, $s'code, $s'data);
}

() $send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref {
    var (($params'bounce, $params'to, $params'value, $params'mode, $params'body, $params'code, $params'data)) = $params;
    builder $b = begin_cell();
    $b = store_int($b, 1, 2);
    $b = __tact_store_bool($b, $params'bounce);
    $b = store_int($b, 0, 3);
    $b = __tact_store_address($b, $params'to);
    $b = store_coins($b, $params'value);
    $b = store_int($b, 0, ((((1 + 4) + 4) + 64) + 32));
    if (((~ null?($params'code)) | (~ null?($params'data)))) {
        $b = __tact_store_bool($b, true);
        builder $bc = begin_cell();
        $bc = __tact_store_bool($bc, false);
        $bc = __tact_store_bool($bc, false);
        if ((~ null?($params'code))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'code));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        if ((~ null?($params'data))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'data));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        $bc = __tact_store_bool($bc, false);
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, end_cell($bc));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $body = $params'body;
    if ((~ null?($body))) {
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, __tact_not_null($body));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $c = end_cell($b);
    send_raw_message($c, $params'mode);
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

() $reply(cell $body) impure inline_ref {
    $send(__gen_constructor_SendParameters$bounce_to_value_mode_body(true, __tact_context_get_sender(), 0, (64 + 2), $body));
}

(cell, cell) $__gen_UserPositionContract_init_child(cell sys', slice $user, slice $stablecoinMasterAddress, slice $positionsManagerAddress) {
    slice sc' = sys'.begin_parse();
    cell source = sc'~load_dict();
    cell contracts = new_dict();
    
    ;; Contract Code: UserPositionContract
    cell mine = __tact_dict_get_code(source, 33846);
    contracts = __tact_dict_set_code(contracts, 33846, mine);
    
    ;; Build cell
    builder b = begin_cell();
    b = b.store_ref(begin_cell().store_dict(contracts).end_cell());
    b = b.store_int(false, 1);
    b = __gen_write_$init$UserPositionContract(b, ($user, $stablecoinMasterAddress, $positionsManagerAddress));
    return (mine, b.end_cell());
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int)) __gen_constructor_DeployOk$queryId(int queryId) inline {
    return (queryId);
}

((slice, slice, slice, int), ()) $__gen_PositionsManagerContract_onlyUserPosition((slice, slice, slice, int) $self, slice $user) impure inline_ref {
    var (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)) = $self;
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

((slice, slice, slice, int), slice) $__gen_PositionsManagerContract__userPositionAddress((slice, slice, slice, int) $self, slice $user) impure inline_ref {
    var (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)) = $self;
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $user, $self'stablecoinMasterAddress, my_address());
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), $contractAddress(($init'code, $init'data)));
}

int $__gen_PositionsManagerContract_lastPositionId((slice, slice, slice, int) $self) impure inline_ref {
    var (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)) = $self;
    return $self'lastPositionId;
}

_ $__gen_get_lastPositionId() method_id(129904) {
    var self = __gen_load_PositionsManagerContract();
    var res = $__gen_PositionsManagerContract_lastPositionId(self);
    return res;
}

slice $__gen_PositionsManagerContract_userPositionAddress((slice, slice, slice, int) $self, slice $user) impure inline_ref {
    var (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)) = $self;
    return ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract__userPositionAddress($user);
}

_ $__gen_get_userPositionAddress(slice $$user) method_id(106213) {
    slice $user = __tact_verify_address($$user);
    var self = __gen_load_PositionsManagerContract();
    var res = $__gen_PositionsManagerContract_userPositionAddress(self, $user);
    return res;
}

(cell, cell) $__gen_PositionAddressContract_init_child(cell sys', int $id) {
    slice sc' = sys'.begin_parse();
    cell source = sc'~load_dict();
    cell contracts = new_dict();
    
    ;; Contract Code: PositionAddressContract
    cell mine = __tact_dict_get_code(source, 63327);
    contracts = __tact_dict_set_code(contracts, 63327, mine);
    
    ;; Build cell
    builder b = begin_cell();
    b = b.store_ref(begin_cell().store_dict(contracts).end_cell());
    b = b.store_int(false, 1);
    b = __gen_write_$init$PositionAddressContract(b, ($id));
    return (mine, b.end_cell());
}

slice $__gen_PositionsManagerContract_userPositionAddressById((slice, slice, slice, int) $self, int $id) impure inline_ref {
    var (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)) = $self;
    var ($init'code, $init'data) = $__gen_PositionAddressContract_init_child(__tact_context_sys, $id);
    return $contractAddress(($init'code, $init'data));
}

_ $__gen_get_userPositionAddressById(int $$id) method_id(94495) {
    int $id = $$id;
    var self = __gen_load_PositionsManagerContract();
    var res = $__gen_PositionsManagerContract_userPositionAddressById(self, $id);
    return res;
}

((slice, slice, slice, int), ()) $__gen_PositionsManagerContract_requireOwner((slice, slice, slice, int) $self) impure inline_ref {
    var (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)) = $self;
    throw_unless(132, __tact_address_eq(__tact_context_get_sender(), $self'owner));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

slice $__gen_PositionsManagerContract_owner((slice, slice, slice, int) $self) impure inline_ref {
    var (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)) = $self;
    return $self'owner;
}

_ $__gen_get_owner() method_id(83229) {
    var self = __gen_load_PositionsManagerContract();
    var res = $__gen_PositionsManagerContract_owner(self);
    return res;
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_SetDeps((slice, slice, slice, int) $self, (slice, slice) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'stablecoinMasterAddress, $msg'gateKeeperAddress) = $msg;
    ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract_requireOwner();
    $self'stablecoinMasterAddress = $msg'stablecoinMasterAddress;
    $self'gateKeeperAddress = $msg'gateKeeperAddress;
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$to_value_mode_bounce_body_code_data(slice to, int value, int mode, int bounce, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_DepositCollateralMessage((slice, slice, slice, int) $self, (slice, int, (int, int, int, int), (int, int), int) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'user, $msg'amount, ($msg'settings'liquidationRatio, $msg'settings'stabilityFeeRate, $msg'settings'closeFactorBps, $msg'settings'liquidatorIncentiveBps), ($msg'rate'debtAccumulatedRate, $msg'rate'lastAccumulationTime), $msg'tonPriceWithSafetyMargin) = $msg;
    throw_unless(5576, __tact_address_eq(__tact_context_get_sender(), $self'gateKeeperAddress));
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user, $self'stablecoinMasterAddress, my_address());
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body_code_data($userPositionAddress, 0, (64 + 2), true, __gen_writecell_DepositCollateralMessage(($msg'user, $msg'amount, ($msg'settings'liquidationRatio, $msg'settings'stabilityFeeRate, $msg'settings'closeFactorBps, $msg'settings'liquidatorIncentiveBps), ($msg'rate'debtAccumulatedRate, $msg'rate'lastAccumulationTime), $msg'tonPriceWithSafetyMargin)), $init'code, $init'data));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

((slice, slice)) __gen_constructor_SetPositionAddressMessage$user_position(slice user, slice position) inline {
    return (user, position);
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_NewPositionIdMessage((slice, slice, slice, int) $self, (slice) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'user) = $msg;
    ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract_onlyUserPosition($msg'user);
    $self'lastPositionId = ($self'lastPositionId + 1);
    var ($init'code, $init'data) = $__gen_PositionAddressContract_init_child(__tact_context_sys, $self'lastPositionId);
    slice $positionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body_code_data($positionAddress, 0, (64 + 2), true, __gen_writecell_SetPositionAddressMessage(__gen_constructor_SetPositionAddressMessage$user_position($msg'user, __tact_context_get_sender())), $init'code, $init'data));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_WithdrawStablecoinMessage((slice, slice, slice, int) $self, (slice, int, (int, int, int, int), (int, int), int) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'user, $msg'amount, ($msg'settings'liquidationRatio, $msg'settings'stabilityFeeRate, $msg'settings'closeFactorBps, $msg'settings'liquidatorIncentiveBps), ($msg'rate'debtAccumulatedRate, $msg'rate'lastAccumulationTime), $msg'tonPriceWithSafetyMargin) = $msg;
    throw_unless(5576, __tact_address_eq(__tact_context_get_sender(), $self'gateKeeperAddress));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body(($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract__userPositionAddress($msg'user), 0, (64 + 2), true, __gen_writecell_WithdrawStablecoinMessage(($msg'user, $msg'amount, ($msg'settings'liquidationRatio, $msg'settings'stabilityFeeRate, $msg'settings'closeFactorBps, $msg'settings'liquidatorIncentiveBps), ($msg'rate'debtAccumulatedRate, $msg'rate'lastAccumulationTime), $msg'tonPriceWithSafetyMargin))));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_IncreaseTotalStableMessage((slice, slice, slice, int) $self, (slice, int) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'user, $msg'amount) = $msg;
    ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract_onlyUserPosition($msg'user);
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($self'gateKeeperAddress, 0, (64 + 2), true, __gen_writecell_IncreaseTotalStableMessage(($msg'user, $msg'amount))));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_RepayStablecoinMessage((slice, slice, slice, int) $self, (slice, int, (int, int, int, int), (int, int), int) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'user, $msg'amount, ($msg'settings'liquidationRatio, $msg'settings'stabilityFeeRate, $msg'settings'closeFactorBps, $msg'settings'liquidatorIncentiveBps), ($msg'rate'debtAccumulatedRate, $msg'rate'lastAccumulationTime), $msg'tonPriceWithSafetyMargin) = $msg;
    throw_unless(5576, __tact_address_eq(__tact_context_get_sender(), $self'gateKeeperAddress));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body(($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract__userPositionAddress($msg'user), 0, (64 + 2), true, __gen_writecell_RepayStablecoinMessage(($msg'user, $msg'amount, ($msg'settings'liquidationRatio, $msg'settings'stabilityFeeRate, $msg'settings'closeFactorBps, $msg'settings'liquidatorIncentiveBps), ($msg'rate'debtAccumulatedRate, $msg'rate'lastAccumulationTime), $msg'tonPriceWithSafetyMargin))));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_DecreaseTotalStableMessage((slice, slice, slice, int) $self, (slice, int) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'user, $msg'amount) = $msg;
    ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract_onlyUserPosition($msg'user);
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($self'gateKeeperAddress, 0, (64 + 2), true, __gen_writecell_DecreaseTotalStableMessage(($msg'user, $msg'amount))));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_WithdrawCollateralMessage((slice, slice, slice, int) $self, (slice, int, (int, int, int, int), (int, int), int) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'user, $msg'amount, ($msg'settings'liquidationRatio, $msg'settings'stabilityFeeRate, $msg'settings'closeFactorBps, $msg'settings'liquidatorIncentiveBps), ($msg'rate'debtAccumulatedRate, $msg'rate'lastAccumulationTime), $msg'tonPriceWithSafetyMargin) = $msg;
    throw_unless(5576, __tact_address_eq(__tact_context_get_sender(), $self'gateKeeperAddress));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body(($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract__userPositionAddress($msg'user), 0, (64 + 2), true, __gen_writecell_WithdrawCollateralMessage(($msg'user, $msg'amount, ($msg'settings'liquidationRatio, $msg'settings'stabilityFeeRate, $msg'settings'closeFactorBps, $msg'settings'liquidatorIncentiveBps), ($msg'rate'debtAccumulatedRate, $msg'rate'lastAccumulationTime), $msg'tonPriceWithSafetyMargin))));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_DoWithdrawCollateralMessage((slice, slice, slice, int) $self, (slice, int) $msg) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($msg'user, $msg'amount) = $msg;
    ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId)~$__gen_PositionsManagerContract_onlyUserPosition($msg'user);
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($self'gateKeeperAddress, 0, (64 + 2), true, __gen_writecell_DoWithdrawCollateralMessage(($msg'user, $msg'amount))));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

(((slice, slice, slice, int)), ()) $__gen_PositionsManagerContract_receive_Deploy((slice, slice, slice, int) $self, (int) $deploy) impure inline {
    var ($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId) = $self;
    var ($deploy'queryId) = $deploy;
    $reply(__gen_writecell_DeployOk(__gen_constructor_DeployOk$queryId($deploy'queryId)));
    return (($self'stablecoinMasterAddress, $self'gateKeeperAddress, $self'owner, $self'lastPositionId), ());
}

((slice, slice, slice, int), int) __gen_router_PositionsManagerContract((slice, slice, slice, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive SetDeps message
    if (op == 587665798) {
        var msg = in_msg~__gen_read_SetDeps();
        self~$__gen_PositionsManagerContract_receive_SetDeps(msg);
        return (self, true);
    }
    
    ;; Receive DepositCollateralMessage message
    if (op == 3723304936) {
        var msg = in_msg~__gen_read_DepositCollateralMessage();
        self~$__gen_PositionsManagerContract_receive_DepositCollateralMessage(msg);
        return (self, true);
    }
    
    ;; Receive NewPositionIdMessage message
    if (op == 225756565) {
        var msg = in_msg~__gen_read_NewPositionIdMessage();
        self~$__gen_PositionsManagerContract_receive_NewPositionIdMessage(msg);
        return (self, true);
    }
    
    ;; Receive WithdrawStablecoinMessage message
    if (op == 1815710139) {
        var msg = in_msg~__gen_read_WithdrawStablecoinMessage();
        self~$__gen_PositionsManagerContract_receive_WithdrawStablecoinMessage(msg);
        return (self, true);
    }
    
    ;; Receive IncreaseTotalStableMessage message
    if (op == 2517198105) {
        var msg = in_msg~__gen_read_IncreaseTotalStableMessage();
        self~$__gen_PositionsManagerContract_receive_IncreaseTotalStableMessage(msg);
        return (self, true);
    }
    
    ;; Receive RepayStablecoinMessage message
    if (op == 3203603975) {
        var msg = in_msg~__gen_read_RepayStablecoinMessage();
        self~$__gen_PositionsManagerContract_receive_RepayStablecoinMessage(msg);
        return (self, true);
    }
    
    ;; Receive DecreaseTotalStableMessage message
    if (op == 281913388) {
        var msg = in_msg~__gen_read_DecreaseTotalStableMessage();
        self~$__gen_PositionsManagerContract_receive_DecreaseTotalStableMessage(msg);
        return (self, true);
    }
    
    ;; Receive WithdrawCollateralMessage message
    if (op == 3410368520) {
        var msg = in_msg~__gen_read_WithdrawCollateralMessage();
        self~$__gen_PositionsManagerContract_receive_WithdrawCollateralMessage(msg);
        return (self, true);
    }
    
    ;; Receive DoWithdrawCollateralMessage message
    if (op == 3285005247) {
        var msg = in_msg~__gen_read_DoWithdrawCollateralMessage();
        self~$__gen_PositionsManagerContract_receive_DoWithdrawCollateralMessage(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~__gen_read_Deploy();
        self~$__gen_PositionsManagerContract_receive_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = __gen_load_PositionsManagerContract();
    
    ;; Handle operation
    int handled = self~__gen_router_PositionsManagerContract(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_PositionsManagerContract(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmRhcTH6ofpHS5SxEQiHgLHGcDNKEPuCCusWYk2UK79spC";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
