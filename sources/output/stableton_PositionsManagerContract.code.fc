#pragma version =0.4.1;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

int __tact_my_balance() inline {
    return pair_first(get_balance());
}

forall X -> X __tact_not_null(X x) inline { throw_if(128, null?(x)); return x; }

global (int, slice, int, slice) __tact_context;
global cell __tact_context_sys;

(int, slice, int, slice) __tact_context_get() inline { return __tact_context; }

() __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() != 267);
}

builder __tact_store_bool(builder b, int v) inline {
    b = b.store_int(v, 1);
    return b;
}

(slice, slice) __tact_load_address(slice cs) inline {
    slice raw = cs~load_msg_addr();
    __tact_verify_address(raw);
    return (cs, raw);
}

builder __tact_store_address(builder b, slice address) inline {
    __tact_verify_address(address);
    b = b.store_slice(address);
    return b;
}

slice __tact_create_address(int chain, int hash) inline {
    var b = begin_cell();
    b = b.store_uint(2, 2);
    b = b.store_uint(0, 1);
    b = b.store_int(chain, 8);
    b = b.store_uint(hash, 256);
    return b.end_cell().begin_parse();
}

slice __tact_compute_contract_address(int chain, cell code, cell data) inline {
    var b = begin_cell();
    b = b.store_uint(0, 2);
    b = b.store_uint(3, 2);
    b = b.store_uint(0, 1);
    b = b.store_ref(code);
    b = b.store_ref(data);
    var hash = cell_hash(b.end_cell());
    return __tact_create_address(chain, hash);
}

int __tact_address_eq(slice a, slice b) inline {
    return equal_slice_bits(a, b);
}

cell __tact_dict_set_code(cell dict, int id, cell code) inline {
    return udict_set_ref(dict, 16, id, code);
}

cell __tact_dict_get_code(cell dict, int id) inline {
    var (data, ok) = udict_get_ref?(dict, 16, id);
    throw_unless(135, ok);
    return data;
}

(slice, ((int))) __gen_read_Deploy(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

builder __gen_write_DeployOk(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell __gen_writecell_DeployOk((int) v) inline {
    return __gen_write_DeployOk(begin_cell(), v).end_cell();
}

builder __gen_write_DepositCollateralMessage(builder build_0, (slice, int) v) inline {
    var (v'user, v'amount) = v;
    build_0 = store_uint(build_0, 299872568, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_coins(v'amount);
    return build_0;
}

cell __gen_writecell_DepositCollateralMessage((slice, int) v) inline {
    return __gen_write_DepositCollateralMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int))) __gen_read_DepositCollateralMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 299872568);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_coins();
    return (sc_0, (v'user, v'amount));
}

builder __gen_write_WithdrawCollateralMessage(builder build_0, (slice, int, int) v) inline {
    var (v'user, v'amount, v'debtRate) = v;
    build_0 = store_uint(build_0, 1747572062, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_coins(v'amount);
    build_0 = build_0.store_int(v'debtRate, 257);
    return build_0;
}

cell __gen_writecell_WithdrawCollateralMessage((slice, int, int) v) inline {
    return __gen_write_WithdrawCollateralMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int, int))) __gen_read_WithdrawCollateralMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1747572062);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_coins();
    var v'debtRate = sc_0~load_int(257);
    return (sc_0, (v'user, v'amount, v'debtRate));
}

builder __gen_write_WithdrawStablecoinMessage(builder build_0, (slice, int, int) v) inline {
    var (v'user, v'amount, v'debtRate) = v;
    build_0 = store_uint(build_0, 4082453719, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    build_0 = build_0.store_uint(v'debtRate, 64);
    return build_0;
}

cell __gen_writecell_WithdrawStablecoinMessage((slice, int, int) v) inline {
    return __gen_write_WithdrawStablecoinMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int, int))) __gen_read_WithdrawStablecoinMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4082453719);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    var v'debtRate = sc_0~load_uint(64);
    return (sc_0, (v'user, v'amount, v'debtRate));
}

builder __gen_write_RepayStablecoinMessage(builder build_0, (slice, int, int) v) inline {
    var (v'user, v'amount, v'debtRate) = v;
    build_0 = store_uint(build_0, 1854010438, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    build_0 = build_0.store_uint(v'debtRate, 64);
    return build_0;
}

cell __gen_writecell_RepayStablecoinMessage((slice, int, int) v) inline {
    return __gen_write_RepayStablecoinMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int, int))) __gen_read_RepayStablecoinMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1854010438);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    var v'debtRate = sc_0~load_uint(64);
    return (sc_0, (v'user, v'amount, v'debtRate));
}

builder __gen_write_DoWithdrawCollateralMessage(builder build_0, (slice, int) v) inline {
    var (v'user, v'amount) = v;
    build_0 = store_uint(build_0, 3285005247, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    return build_0;
}

cell __gen_writecell_DoWithdrawCollateralMessage((slice, int) v) inline {
    return __gen_write_DoWithdrawCollateralMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int))) __gen_read_DoWithdrawCollateralMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3285005247);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    return (sc_0, (v'user, v'amount));
}

builder __gen_write_IncreaseTotalStableMessage(builder build_0, (slice, int) v) inline {
    var (v'user, v'amount) = v;
    build_0 = store_uint(build_0, 2517198105, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    return build_0;
}

cell __gen_writecell_IncreaseTotalStableMessage((slice, int) v) inline {
    return __gen_write_IncreaseTotalStableMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int))) __gen_read_IncreaseTotalStableMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2517198105);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    return (sc_0, (v'user, v'amount));
}

builder __gen_write_DecreaseTotalStableMessage(builder build_0, (slice, int, int) v) inline {
    var (v'user, v'amount, v'fees) = v;
    build_0 = store_uint(build_0, 3984666698, 32);
    build_0 = __tact_store_address(build_0, v'user);
    build_0 = build_0.store_uint(v'amount, 64);
    build_0 = build_0.store_uint(v'fees, 64);
    return build_0;
}

cell __gen_writecell_DecreaseTotalStableMessage((slice, int, int) v) inline {
    return __gen_write_DecreaseTotalStableMessage(begin_cell(), v).end_cell();
}

(slice, ((slice, int, int))) __gen_read_DecreaseTotalStableMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3984666698);
    var v'user = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    var v'fees = sc_0~load_uint(64);
    return (sc_0, (v'user, v'amount, v'fees));
}

builder __gen_write_SetPositionIdMessage(builder build_0, (int) v) inline {
    var (v'positionId) = v;
    build_0 = store_uint(build_0, 11782869, 32);
    build_0 = build_0.store_uint(v'positionId, 8);
    return build_0;
}

cell __gen_writecell_SetPositionIdMessage((int) v) inline {
    return __gen_write_SetPositionIdMessage(begin_cell(), v).end_cell();
}

(slice, ((slice))) __gen_read_NewPositionIdMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 225756565);
    var v'user = sc_0~__tact_load_address();
    return (sc_0, (v'user));
}

builder __gen_write_PositionsManagerContract(builder build_0, (slice, int, slice, slice) v) inline {
    var (v'owner, v'lastPositionId, v'stablecoinMasterAddress, v'gateKeeperAddress) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_uint(v'lastPositionId, 32);
    build_0 = __tact_store_address(build_0, v'stablecoinMasterAddress);
    build_0 = __tact_store_address(build_0, v'gateKeeperAddress);
    return build_0;
}

(slice, ((slice, int, slice, slice))) __gen_read_PositionsManagerContract(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'lastPositionId = sc_0~load_uint(32);
    var v'stablecoinMasterAddress = sc_0~__tact_load_address();
    var v'gateKeeperAddress = sc_0~__tact_load_address();
    return (sc_0, (v'owner, v'lastPositionId, v'stablecoinMasterAddress, v'gateKeeperAddress));
}

builder __gen_write_$init$UserPositionContract(builder build_0, (slice) v) inline {
    var (v'user) = v;
    build_0 = __tact_store_address(build_0, v'user);
    return build_0;
}

(slice, ((slice, slice, slice))) __gen_read_$init$PositionsManagerContract(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'gateKeeperAddress = sc_0~__tact_load_address();
    var v'stablecoinMasterAddress = sc_0~__tact_load_address();
    return (sc_0, (v'owner, v'gateKeeperAddress, v'stablecoinMasterAddress));
}

(slice, int, slice, slice) $__gen_PositionsManagerContract_init(slice $owner, slice $gateKeeperAddress, slice $stablecoinMasterAddress) impure inline_ref {
    var (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress)) = (null(), 0, null(), null());
    $self'owner = $owner;
    $self'gateKeeperAddress = $gateKeeperAddress;
    $self'stablecoinMasterAddress = $stablecoinMasterAddress;
    return ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress);
}

(slice, int, slice, slice) __gen_load_PositionsManagerContract() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_PositionsManagerContract();
    } else {
        (slice owner, slice gateKeeperAddress, slice stablecoinMasterAddress) = $sc~__gen_read_$init$PositionsManagerContract();
        $sc.end_parse();
        return $__gen_PositionsManagerContract_init(owner, gateKeeperAddress, stablecoinMasterAddress);
    }
}

() __gen_store_PositionsManagerContract((slice, int, slice, slice) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_PositionsManagerContract(b, v);
    set_data(b.end_cell());
}

slice $contractAddress((cell, cell) $s) impure inline_ref {
    var (($s'code, $s'data)) = $s;
    return __tact_compute_contract_address(0, $s'code, $s'data);
}

() $send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref {
    var (($params'bounce, $params'to, $params'value, $params'mode, $params'body, $params'code, $params'data)) = $params;
    builder $b = begin_cell();
    $b = store_int($b, 1, 2);
    $b = __tact_store_bool($b, $params'bounce);
    $b = store_int($b, 0, 3);
    $b = __tact_store_address($b, $params'to);
    $b = store_coins($b, $params'value);
    $b = store_int($b, 0, ((((1 + 4) + 4) + 64) + 32));
    if (((~ null?($params'code)) | (~ null?($params'data)))) {
        $b = __tact_store_bool($b, true);
        builder $bc = begin_cell();
        $bc = __tact_store_bool($bc, false);
        $bc = __tact_store_bool($bc, false);
        if ((~ null?($params'code))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'code));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        if ((~ null?($params'data))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'data));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        $bc = __tact_store_bool($bc, false);
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, end_cell($bc));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $body = $params'body;
    if ((~ null?($body))) {
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, __tact_not_null($body));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $c = end_cell($b);
    send_raw_message($c, $params'mode);
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

() $reply(cell $body) impure inline_ref {
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    $send(__gen_constructor_SendParameters$bounce_to_value_mode_body(true, $ctx'sender, 0, (64 + 2), $body));
}

int $__gen_Context_readForwardFee((int, slice, int, slice) $self) impure inline_ref {
    var (($self'bounced, $self'sender, $self'value, $self'raw)) = $self;
    var (($self'bounced, $self'sender, $self'value, $self'raw)) = $self;
    slice $sc = $self'raw;
    $sc~load_coins();
    $sc~skip_bits(1);
    $sc~load_coins();
    return (($sc~load_coins() * 3) / 2);
}

(cell, cell) $__gen_UserPositionContract_init_child(cell sys', slice $user) {
    slice sc' = sys'.begin_parse();
    cell source = sc'~load_dict();
    cell contracts = new_dict();
    
    ;; Contract Code: UserPositionContract
    cell mine = __tact_dict_get_code(source, 33846);
    contracts = __tact_dict_set_code(contracts, 33846, mine);
    
    ;; Build cell
    builder b = begin_cell();
    b = b.store_ref(begin_cell().store_dict(contracts).end_cell());
    b = b.store_int(false, 1);
    b = __gen_write_$init$UserPositionContract(b, ($user));
    return (mine, b.end_cell());
}

((int)) __gen_constructor_DeployOk$queryId(int queryId) inline {
    return (queryId);
}

int $__gen_PositionsManagerContract_lastPositionId((slice, int, slice, slice) $self) impure inline_ref {
    var (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress)) = $self;
    return $self'lastPositionId;
}

_ $__gen_get_lastPositionId() method_id(129904) {
    var self = __gen_load_PositionsManagerContract();
    var res = $__gen_PositionsManagerContract_lastPositionId(self);
    return res;
}

int $__gen_PositionsManagerContract_balance((slice, int, slice, slice) $self) impure inline_ref {
    var (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress)) = $self;
    return __tact_my_balance();
}

_ $__gen_get_balance() method_id(104128) {
    var self = __gen_load_PositionsManagerContract();
    var res = $__gen_PositionsManagerContract_balance(self);
    return res;
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$to_value_mode_bounce_body_code_data(slice to, int value, int mode, int bounce, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

((slice, int)) __gen_constructor_DepositCollateralMessage$amount_user(int amount, slice user) inline {
    return (user, amount);
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_DepositCollateralMessage((slice, int, slice, slice) $self, (slice, int) $msg) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($msg'user, $msg'amount) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(5576, __tact_address_eq($ctx'sender, $self'gateKeeperAddress));
    int $fwdFee = $__gen_Context_readForwardFee(($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw));
    throw_unless(16059, ($ctx'value > ($msg'amount + 500000000)));
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user);
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body_code_data($userPositionAddress, 500000000, 2, true, __gen_writecell_DepositCollateralMessage(__gen_constructor_DepositCollateralMessage$amount_user($msg'amount, $msg'user)), $init'code, $init'data));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int)) __gen_constructor_SetPositionIdMessage$positionId(int positionId) inline {
    return (positionId);
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_NewPositionIdMessage((slice, int, slice, slice) $self, (slice) $msg) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($msg'user) = $msg;
    $self'lastPositionId = ($self'lastPositionId + 1);
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user);
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($ctx'sender, 100000000, 2, true, __gen_writecell_SetPositionIdMessage(__gen_constructor_SetPositionIdMessage$positionId($self'lastPositionId))));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_WithdrawStablecoinMessage((slice, int, slice, slice) $self, (slice, int, int) $msg) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($msg'user, $msg'amount, $msg'debtRate) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(5576, __tact_address_eq($ctx'sender, $self'gateKeeperAddress));
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user);
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($userPositionAddress, 100000000, 2, true, __gen_writecell_WithdrawStablecoinMessage(($msg'user, $msg'amount, $msg'debtRate))));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_IncreaseTotalStableMessage((slice, int, slice, slice) $self, (slice, int) $msg) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($msg'user, $msg'amount) = $msg;
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user);
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($self'gateKeeperAddress, 100000000, 2, true, __gen_writecell_IncreaseTotalStableMessage(($msg'user, $msg'amount))));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_RepayStablecoinMessage((slice, int, slice, slice) $self, (slice, int, int) $msg) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($msg'user, $msg'amount, $msg'debtRate) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(5576, __tact_address_eq($ctx'sender, $self'gateKeeperAddress));
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user);
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($userPositionAddress, 100000000, 2, true, __gen_writecell_RepayStablecoinMessage(($msg'user, $msg'amount, $msg'debtRate))));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_DecreaseTotalStableMessage((slice, int, slice, slice) $self, (slice, int, int) $msg) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($msg'user, $msg'amount, $msg'fees) = $msg;
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user);
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($self'gateKeeperAddress, 100000000, 2, true, __gen_writecell_DecreaseTotalStableMessage(($msg'user, $msg'amount, $msg'fees))));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_WithdrawCollateralMessage((slice, int, slice, slice) $self, (slice, int, int) $msg) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($msg'user, $msg'amount, $msg'debtRate) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(5576, __tact_address_eq($ctx'sender, $self'gateKeeperAddress));
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user);
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($userPositionAddress, 100000000, 2, true, __gen_writecell_WithdrawCollateralMessage(($msg'user, $msg'amount, $msg'debtRate))));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_DoWithdrawCollateralMessage((slice, int, slice, slice) $self, (slice, int) $msg) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($msg'user, $msg'amount) = $msg;
    var ($init'code, $init'data) = $__gen_UserPositionContract_init_child(__tact_context_sys, $msg'user);
    slice $userPositionAddress = $contractAddress(($init'code, $init'data));
    $send(__gen_constructor_SendParameters$to_value_mode_bounce_body($self'gateKeeperAddress, 100000000, 2, true, __gen_writecell_DoWithdrawCollateralMessage(($msg'user, $msg'amount))));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

(((slice, int, slice, slice)), ()) $__gen_PositionsManagerContract_receive_Deploy((slice, int, slice, slice) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress) = $self;
    var ($deploy'queryId) = $deploy;
    $reply(__gen_writecell_DeployOk(__gen_constructor_DeployOk$queryId($deploy'queryId)));
    return (($self'owner, $self'lastPositionId, $self'stablecoinMasterAddress, $self'gateKeeperAddress), ());
}

((slice, int, slice, slice), int) __gen_router_PositionsManagerContract((slice, int, slice, slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive DepositCollateralMessage message
    if (op == 299872568) {
        var msg = in_msg~__gen_read_DepositCollateralMessage();
        self~$__gen_PositionsManagerContract_receive_DepositCollateralMessage(msg);
        return (self, true);
    }
    
    ;; Receive NewPositionIdMessage message
    if (op == 225756565) {
        var msg = in_msg~__gen_read_NewPositionIdMessage();
        self~$__gen_PositionsManagerContract_receive_NewPositionIdMessage(msg);
        return (self, true);
    }
    
    ;; Receive WithdrawStablecoinMessage message
    if (op == 4082453719) {
        var msg = in_msg~__gen_read_WithdrawStablecoinMessage();
        self~$__gen_PositionsManagerContract_receive_WithdrawStablecoinMessage(msg);
        return (self, true);
    }
    
    ;; Receive IncreaseTotalStableMessage message
    if (op == 2517198105) {
        var msg = in_msg~__gen_read_IncreaseTotalStableMessage();
        self~$__gen_PositionsManagerContract_receive_IncreaseTotalStableMessage(msg);
        return (self, true);
    }
    
    ;; Receive RepayStablecoinMessage message
    if (op == 1854010438) {
        var msg = in_msg~__gen_read_RepayStablecoinMessage();
        self~$__gen_PositionsManagerContract_receive_RepayStablecoinMessage(msg);
        return (self, true);
    }
    
    ;; Receive DecreaseTotalStableMessage message
    if (op == 3984666698) {
        var msg = in_msg~__gen_read_DecreaseTotalStableMessage();
        self~$__gen_PositionsManagerContract_receive_DecreaseTotalStableMessage(msg);
        return (self, true);
    }
    
    ;; Receive WithdrawCollateralMessage message
    if (op == 1747572062) {
        var msg = in_msg~__gen_read_WithdrawCollateralMessage();
        self~$__gen_PositionsManagerContract_receive_WithdrawCollateralMessage(msg);
        return (self, true);
    }
    
    ;; Receive DoWithdrawCollateralMessage message
    if (op == 3285005247) {
        var msg = in_msg~__gen_read_DoWithdrawCollateralMessage();
        self~$__gen_PositionsManagerContract_receive_DoWithdrawCollateralMessage(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~__gen_read_Deploy();
        self~$__gen_PositionsManagerContract_receive_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    
    ;; Load contract data
    var self = __gen_load_PositionsManagerContract();
    
    ;; Handle operation
    int handled = self~__gen_router_PositionsManagerContract(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_PositionsManagerContract(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmYT3KveWUvqRHRbmhv81GfyBSqTmvTH824zpH9CEW2NvA";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
